{"version":3,"sources":["components/ProfileList/index.js","utils/queries.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/Header/index.js","components/Footer/index.js","pages/Profile.js","components/Audit/index.js","components/Navigation/index.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileList","profiles","title","length","className","map","profile","name","to","_id","QUERY_PROFILES","gql","QUERY_SINGLE_PROFILE","QUERY_ME","Home","useQuery","loading","data","ADD_PROFILE","LOGIN_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","email","password","formState","setFormState","useMutation","addProfile","error","handleChange","event","target","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","login","onSubmit","placeholder","type","onChange","style","cursor","message","Login","props","Header","fontSize","fontWeight","loggedIn","onClick","logout","Footer","useLocation","history","useHistory","pathname","goBack","Profile","profileId","useParams","me","getProfile","Audits","Navigation","Navbar","bg","expand","Container","fluid","Brand","href","Toggle","Collapse","id","Nav","Link","NavDropdown","Item","Divider","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","Audit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d54ea0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileList = ({ profiles, title }) => {\r\n  if (!profiles.length) {\r\n    return <h3>No Profiles Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-primary\">{title}</h3>\r\n      <div className=\"flex-row justify-space-between my-4\">\r\n        {profiles &&\r\n          profiles.map((profile) => (\r\n            <div key={profile._id} className=\"col-12 col-xl-6\">\r\n              <div className=\"card mb-3\">\r\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\r\n                  {profile.name} <br />\r\n                </h4>\r\n\r\n                <Link\r\n                  className=\"btn btn-block btn-squared btn-light text-dark\"\r\n                  to={`/profiles/${profile._id}`}\r\n                >\r\n                  View profile.\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PROFILES = gql`\r\n  query allProfiles {\r\n    profiles {\r\n      _id\r\n      name\r\n      audits\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_SINGLE_PROFILE = gql`\r\n  query singleProfile($profileId: ID!) {\r\n    profile(profileId: $profileId) {\r\n      _id\r\n      name\r\n      audits\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      name\r\n      audits\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport ProfileList from '../components/ProfileList';\r\n\r\nimport { QUERY_PROFILES } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_PROFILES);\r\n  const profiles = data?.profiles || [];\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n        <div>\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ProfileList\r\n              profiles={profiles}\r\n              title=\"Here are current users:\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_PROFILE = gql`\r\n  mutation addProfile($name: String!, $email: String!, $password: String!) {\r\n    addProfile(name: $name, email: $email, password: $password) {\r\n      token\r\n      profile {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      profile {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_PROFILE } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addProfile, { error, data }] = useMutation(ADD_PROFILE);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addProfile({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addProfile.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-info\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-info\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <header className=\"bg-info text-dark mb-4 py-3 display-flex align-center\">\r\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\r\n        <Link className=\"text-dark\" to=\"/\">\r\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\r\n            ARCCOM\r\n          </h1>\r\n        </Link>\r\n        <p className=\"m-0\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\r\n          Supporting the fight.\r\n        </p>\r\n        <div>\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\r\n                View My Profile\r\n              </Link>\r\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\r\n                Signup\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    <footer className=\"w-100 mt-auto text-dark p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\n\r\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n  const { profileId } = useParams();\r\n\r\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\r\n  const { loading, data } = useQuery(\r\n    profileId ? QUERY_SINGLE_PROFILE : QUERY_ME,\r\n    {\r\n      variables: { profileId: profileId },\r\n    }\r\n  );\r\n\r\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\r\n  const profile = data?.me || data?.profile || {};\r\n\r\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\r\n    return <Redirect to=\"/me\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!profile?.name) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see your profile page. Use the navigation\r\n        links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"card-header\">\r\n        { {profileId} ? `${profile.name}` : 'This person '} has completed the below audits:\r\n        \r\n      </h2>      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\nconst Audits = () => {\r\n    return(\r\n    <h1>Hello Audits</h1>\r\n    )\r\n};\r\n\r\nexport default Audits;","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"/\">ARCHSE</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n            <Nav.Link href=\"/audits\">Audits</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Profile from './pages/Profile';\r\nimport Audits from './components/Audit';\r\nimport Navigation from './components/Navigation';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <Navigation />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route exact path=\"/me\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/audits\">\r\n              <Audits />\r\n            </Route>\r\n            <Route exact path=\"/profiles/:profileId\">\r\n              <Profile />\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}